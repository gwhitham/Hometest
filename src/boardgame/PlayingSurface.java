/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boardgame;
import boardgame.Player;

/**
 *
 * @author Geraint
 */
public class PlayingSurface extends javax.swing.JFrame {
             Player player1 = new Player(1);
         Player player2 = new Player(2);
         Player[] players = null;
         int lowScore = 66;
         String roundLoser;
         boolean gameStarted=false;
         int noOfPlayers=0;
         int playergo =1;
         int maxturns =3;
    /**
     * Creates new form PlayingSurface
     */
    public PlayingSurface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dice1 = new javax.swing.JLabel();
        dice2 = new javax.swing.JLabel();
        onRoll = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        playerSelect = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabelPlayer1 = new javax.swing.JLabel();
        play1Score = new javax.swing.JLabel();
        jLabelPlayer2 = new javax.swing.JLabel();
        jLabelPlayer3 = new javax.swing.JLabel();
        jLabelPlayer4 = new javax.swing.JLabel();
        play2Score = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RoundLowScore = new javax.swing.JLabel();
        bankScore = new javax.swing.JButton();
        currentPlayer = new javax.swing.JLabel();
        player3Score = new javax.swing.JLabel();
        startGame = new javax.swing.JToggleButton();
        labellowplayer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 1.png"))); // NOI18N

        dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 2.png"))); // NOI18N

        onRoll.setFont(new java.awt.Font("Platinum Beat BTN", 0, 24)); // NOI18N
        onRoll.setText("Roll");
        onRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRollActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Maximus BT", 2, 48)); // NOI18N
        jLabel1.setText("Mexicana");

        playerSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2 Player", "3 Player", "4 Player" }));
        playerSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerSelectActionPerformed(evt);
            }
        });

        jLabel2.setText("Select the amount of players");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Low Score");

        RoundLowScore.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        RoundLowScore.setText("0");

        bankScore.setFont(new java.awt.Font("Platinum Beat BTN", 1, 14)); // NOI18N
        bankScore.setText("Bank Score");
        bankScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankScoreActionPerformed(evt);
            }
        });

        currentPlayer.setText("Current Player:");

        startGame.setText("Start");
        startGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameActionPerformed(evt);
            }
        });

        labellowplayer.setText("by Player");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dice1)
                        .addGap(18, 18, 18)
                        .addComponent(dice2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(onRoll, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addComponent(bankScore))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(58, 58, 58))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(currentPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(RoundLowScore, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(labellowplayer, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(play1Score, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabelPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(jLabelPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jLabelPlayer3)
                                .addGap(147, 147, 147)
                                .addComponent(jLabelPlayer4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(197, 197, 197)
                                .addComponent(play2Score))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startGame)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(playerSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(382, 382, 382)
                .addComponent(player3Score, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(dice1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(startGame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dice2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bankScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(onRoll, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addComponent(currentPlayer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RoundLowScore, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labellowplayer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(play1Score))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelPlayer2)
                        .addComponent(jLabelPlayer3)
                        .addComponent(jLabelPlayer4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(play2Score))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(player3Score, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRollActionPerformed
        Dice firstDice = new Dice(1);
        int number=firstDice.roll();
        Dice secondDice = new Dice(2);
        int number2=secondDice.roll();
        System.out.println(number2);
        switch (number) {
            case 1:  dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 1.png")));
                     break;
            case 2:  dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 2.png")));
                     break;
            case 3:  dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 3.png")));
                     break;
            case 4:  dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 4.png")));
                     break;
            case 5:  dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 5.png")));
                     break;
            case 6:  dice1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 6.png")));
                     break;
        }
        switch (number2) {
            case 1:  dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 1.png")));
                     break;
            case 2:  dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 2.png")));
                     break;
            case 3:  dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 3.png")));
                     break;
            case 4:  dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 4.png")));
                     break;
            case 5:  dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 5.png")));
                     break;
            case 6:  dice2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boardgame/images/dice 6.png")));
                     break;
                     
             
        }
        
        keepScore(number, number2);
        
        //int result = player1.calcScore(number, number2);
        //String finalResult = Integer.toString(result);
        //play1Score.setText(finalResult);
        
// TODO add your handling code here:
    }//GEN-LAST:event_onRollActionPerformed

    private void playerSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerSelectActionPerformed
        String item  = (String)playerSelect.getSelectedItem();
        if (item.contentEquals("2 Player")){
           addPlayer(2);
           noOfPlayers=2;
        }
        else if(item.contentEquals("3 Player")){
           addPlayer(3);
           noOfPlayers=2;
        }
        //   int result = player1.calcScore(1,2);
        //String finalResult = Integer.toString(result);
        //play1Score.setText(finalResult);
        
     
        
    }//GEN-LAST:event_playerSelectActionPerformed

    private void bankScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankScoreActionPerformed
        if(player1.getTurns()>0){
        int score = player1.getScore();
        System.out.println(score);
        if (score<lowScore){
        RoundLowScore.setText(Integer.toString(score));
        lowScore=score;
        labellowplayer.setText("by player"+Integer.toString(playergo));
       }
        if(playergo==1){
            maxturns=player1.getTurns();
        }
        playergo++;
        player1.resetTurns();
        }
    }//GEN-LAST:event_bankScoreActionPerformed

    private void startGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameActionPerformed
        gameStarted=true;
        players = new Player[noOfPlayers];
        
    }//GEN-LAST:event_startGameActionPerformed
    public void keepScore( int number, int number2){
        int result = player1.calcScore(number, number2);
        
         String finalResult = Integer.toString(result);
         if ((number!=number2)&&(result!=31)&&(result!=21)){
             System.out.println(finalResult);
             player1.setTurns();
             player1.setScore(result);
         }
         finalResult= finalResult+" in "+player1.getTurns();
         switch (playergo){
             case 1:play1Score.setText(finalResult);
             break;
             case 2:play2Score.setText(finalResult);
             break;
             case 3:player3Score.setText(finalResult);
         }
         if (player1.getTurns()==maxturns){
             int score = player1.getScore();
             if (score<lowScore){
        RoundLowScore.setText(Integer.toString(score));
        lowScore=score;
        labellowplayer.setText("by player"+Integer.toString(playergo));
       }
             player1.resetTurns();
             playergo++;
             
             
         }
        
    }
    public void addPlayer(int i){
        if (i==2){
         jLabelPlayer1.setText("Player 1 Score");
         play1Score.setText("0");
         jLabelPlayer2.setText("Player 2 Score");
         play2Score.setText("0");
        }
        if (i==3){
         jLabelPlayer1.setText("Player 1 Score");
         play1Score.setText("0");
         jLabelPlayer2.setText("Player 2 Score");
         play2Score.setText("0");
         jLabelPlayer3.setText("Player 3 Score");
         player3Score.setText("0");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayingSurface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayingSurface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayingSurface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayingSurface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayingSurface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RoundLowScore;
    private javax.swing.JButton bankScore;
    private javax.swing.JLabel currentPlayer;
    private javax.swing.JLabel dice1;
    private javax.swing.JLabel dice2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelPlayer1;
    private javax.swing.JLabel jLabelPlayer2;
    private javax.swing.JLabel jLabelPlayer3;
    private javax.swing.JLabel jLabelPlayer4;
    private javax.swing.JLabel labellowplayer;
    private javax.swing.JButton onRoll;
    private javax.swing.JLabel play1Score;
    private javax.swing.JLabel play2Score;
    private javax.swing.JLabel player3Score;
    private javax.swing.JComboBox<String> playerSelect;
    public javax.swing.JToggleButton startGame;
    // End of variables declaration//GEN-END:variables
}
